package com.capstoneproject.themeal.service;

import com.capstoneproject.themeal.model.entity.OrderTable;
import com.capstoneproject.themeal.repository.OrderTableHasFoodRepository;
import com.capstoneproject.themeal.repository.OrderTableRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import org.springframework.mail.javamail.MimeMessageHelper;

@Service
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;

    @Autowired
    private OrderTableRepository orderTableRepository;

    public void sendConfirmArrivalEmail(OrderTable orderTable) {
        try {
            MimeMessage mimeMessage = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, "utf-8");

            String confirmLink = "http://localhost:8080/api/orders/" + orderTable.getMaSoDatBan() + "/confirm-arrival";
            String cancelLink = "http://localhost:8080/api/orders/" + orderTable.getMaSoDatBan() + "/cancel-arrival";

            String htmlContent = "<p>B·∫°n c√≥ ch·∫Øc ch·∫Øn s·∫Ω ƒë·∫øn nh√† h√†ng l√∫c <b>" + orderTable.getGio() +
                    "</b> ng√†y <b>" + orderTable.getNgay() + "</b> kh√¥ng?</p>" +

                    "<a href=\"" + confirmLink + "\" " +
                    "style=\"display:inline-block; margin-right:10px; padding: 10px 20px; background-color: #4CAF50; color: white; text-decoration: none; border-radius: 5px;\">" +
                    "T√¥i s·∫Ω ƒë·∫øn</a>" +

                    "<a href=\"" + cancelLink + "\" " +
                    "style=\"display:inline-block; padding: 10px 20px; background-color: #f44336; color: white; text-decoration: none; border-radius: 5px;\">" +
                    "T√¥i mu·ªën hu·ª∑</a>";

            orderTable.setEmailConfirmSent(true);
            orderTableRepository.save(orderTable);
            helper.setTo(orderTable.getKhachHang().getEmail());
            helper.setSubject("X√°c nh·∫≠n ƒë·∫∑t b√†n");
            helper.setText(htmlContent, true); // true = is HTML

            mailSender.send(mimeMessage);
        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }

    public void sendRefundEmail(OrderTable orderTable) {
        try {
            MimeMessage mimeMessage = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, "utf-8");

            String confirmUrl = "http://localhost:8080/api/orders/refundByOwner/" + orderTable.getMaSoDatBan();
            String ownerName = orderTable.getNhaHang().getChuNhaHang().getHoTen();
            String customerName = orderTable.getKhachHang().getHoTen();
            String reservationDate = orderTable.getNgay().toString(); // format n·∫øu c·∫ßn
            String reservationTime = orderTable.getGio().toString(); // format n·∫øu c·∫ßn
            String numberOfGuests = String.valueOf(orderTable.getSoKhach());
            String note = orderTable.getDanhSachDonDatBanCoMonAn().isEmpty() ? "Kh√¥ng c√≥ ghi ch√∫." : "ƒê·∫∑t m√≥n ƒÉn tr∆∞·ªõc"; // ho·∫∑c l·∫•y t·ª´ ch·ªó kh√°c n·∫øu c√≥

            String htmlContent =
                    "<p>Xin ch√†o <b>" + ownerName + "</b>,</p>\n" +
                            "<p>B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c m·ªôt ƒë∆°n ƒë·∫∑t b√†n m·ªõi t·ª´ h·ªá th·ªëng <b>The Meal</b>.</p>\n" +
                            "<h3>üìå Th√¥ng tin ƒë∆°n h√†ng:</h3>\n" +
                            "<ul>\n" +
                            "  <li><b>Kh√°ch h√†ng:</b> " + customerName + "</li>\n" +
                            "  <li><b>Ng√†y:</b> " + reservationDate + "</li>\n" +
                            "  <li><b>Gi·ªù:</b> " + reservationTime + "</li>\n" +
                            "  <li><b>S·ªë l∆∞·ª£ng kh√°ch:</b> " + numberOfGuests + "</li>\n" +
//                            "  <li><b>S·ªë ti·ªÅn c·∫ßn ho√†n tr·∫£:</b> " + numberOfGuests + "</li>\n"
                            "  <li><b>Ghi ch√∫:</b> " + note + "</li>\n" +
                            "</ul>\n" +
                            "<hr />\n" +
                            "<h4>‚ö†Ô∏è H√†nh ƒë·ªông c·∫ßn thi·∫øt:</h4>\n" +
                            "<p>\n" +
                            "  Vui l√≤ng x√°c nh·∫≠n ƒë∆°n ƒë·∫∑t n√†y tr√™n h·ªá th·ªëng n·∫øu kh√°ch h√†ng ƒë·∫øn nh√† h√†ng ƒë√∫ng gi·ªù.<br />\n" +
                            "  N·∫øu kh√°ch <b>kh√¥ng ƒë·∫øn</b> ho·∫∑c <b>mu·ªën hu·ª∑</b>, b·∫°n c≈©ng c√≥ th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i th·ªß c√¥ng t·∫°i trang qu·∫£n l√Ω c·ªßa b·∫°n.\n" +
                            "</p>\n" +
                            "<p>\n" +
                            "  üëâ <a href=\"" + confirmUrl + "\" style=\"background-color: #007bff; color: white; padding: 10px 15px; border-radius: 5px; text-decoration: none;\">Ho√†n ti·ªÅn cho kh√°ch h√†ng</a>\n" +
                            "</p>\n" +
                            "<p style=\"font-style: italic; color: gray;\">\n" +
                            "  (Email ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng The Meal ‚Äì vui l√≤ng kh√¥ng tr·∫£ l·ªùi l·∫°i email n√†y)\n" +
                            "</p>";

            helper.setTo(orderTable.getNhaHang().getChuNhaHang().getEmail());
            helper.setSubject("[Th√¥ng b√°o] B·∫°n c√≥ ƒë∆°n h√†ng c·∫ßn ho√†n ti·ªÅn cho kh√°ch h√†ng");
            helper.setText(htmlContent, true);
            mailSender.send(mimeMessage);

        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }
}


